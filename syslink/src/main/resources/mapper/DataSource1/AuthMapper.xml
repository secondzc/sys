<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongyuan.model.dao.AuthMapper">

    <resultMap id="mapResultMap" type="map">
        <id column="auth_id" property="authId" jdbcType="BIGINT"  />
        <id column="parent_id" property="parentId" jdbcType="BIGINT"  />
        <result column="auth_name" property="authName" jdbcType="VARCHAR"/>
        <result column="auth_code" property="authCode" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>

    </resultMap>
    <resultMap id="baseResultMap" type="com.tongyuan.model.domain.Auth">
        <id column="auth_id" property="authId" jdbcType="BIGINT"  />
        <id column="parent_id" property="parentId" jdbcType="BIGINT"  />
        <result column="auth_name" property="authName" jdbcType="VARCHAR"/>
        <result column="auth_code" property="authCode" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>

    </resultMap>
    <sql id="baseColumnList" >
        auth_id,auth_name,auth_code,create_date,description,url,parent_id
    </sql>
    <insert id="add"  parameterType="map">
        INSERT INTO auth (auth_name,auth_code,create_date,description,url,parent_id) VALUES
        (#{authName}, #{authCode}, #{createDate},#{description},#{url},#{parentId})
    </insert>
    <update id="update"  parameterType="map">
        UPDATE auth SET auth_name=#{authName},description=#{description},auth_code=#{authCode},create_date=#{createDate},url=#{url}
        WHERE auth_id=#{authId}
    </update>
    <select id="query" resultMap="mapResultMap" resultType="map" >
        SELECT
        <include refid="baseColumnList" />
        FROM auth
        WHERE parent_id IS NULL  ORDER BY create_date ASC
    </select>
    <select id="queryById" resultMap="baseResultMap"  parameterType="INTEGER" >
        SELECT
        <include refid="baseColumnList" />
        FROM auth
        WHERE auth_id = #{authId}
    </select>
    <select id="getChildren" resultMap="mapResultMap" resultType="map" >
        SELECT
        <include refid="baseColumnList" />
        FROM auth
        WHERE parent_id =#{authId} ORDER BY create_date ASC
    </select>
    <select id="queryAuthByRoleId" resultMap="baseResultMap" parameterType="INTEGER">
        SELECT
        d.auth_id,d.auth_name,d.auth_code,d.create_date,d.description,d.url,d.parent_id,
        l.auth_id
        FROM
        auth as d
        INNER JOIN role_auth as l
        ON d.auth_id=l.auth_id
        AND l.role_id=#{roleId}
        WHERE 1=1
    </select>
    <select id="queryAuthByUid" resultMap="baseResultMap" parameterType="long">
        SELECT
        d.auth_id,d.auth_name,d.auth_code,d.create_date,d.description,d.url,d.parent_id,
        l.auth_id
        FROM
        auth as d
        INNER JOIN user_auth as l
        ON d.auth_id=l.auth_id
        AND l.uid=#{uid}
        WHERE 1=1
    </select>

    <delete id="deleteById" parameterType="INTEGER">
        delete from auth where auth_id=#{id}
    </delete>
    <delete id="deleteByPid" parameterType="INTEGER">
        delete from auth where parent_id=#{parentId}
    </delete>
</mapper>